name: Build NPM package
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches:
      - 'main'
  push:
    branches:
      - 'main'

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: milaboratory/github-ci/actions/context/init@v4
        with:
          version-canonize: false
          branch-versioning: main
  run:
    needs:
      - init

    uses: milaboratory/github-ci/.github/workflows/node-simple-pnpm.yaml@v4
    with:
      app-name: Blast PL package
      app-name-slug: 'blast'

      node-version: '20.x'
      build-script-name: 'build'
      pnpm-recursive-build: false

      test: false
      test-script-name: 'test'
      pnpm-recursive-tests: false

      publish-to-public: true
      create-tag: true

      npmrc-config: |
        {
          "registries": {
            "https://registry.npmjs.org/": {
              "scopes": ["milaboratories", "platforma-open", "platforma-sdk"],
              "tokenVar": "NPMJS_TOKEN"
            },
            "https://npm.pkg.github.com/": {
              "scopes": ["milaboratory"],
              "tokenVar": "NODE_AUTH_TOKEN"
            }
          }
        }

    secrets:
      env: |
        { "PL_REGISTRY_PLATFORMA_OPEN_UPLOAD_URL": ${{ toJSON(secrets.PL_REGISTRY_PLOPEN_UPLOAD_URL) }},
          "QUAY_USERNAME": ${{ toJSON(secrets.QUAY_USERNAME) }},
          "QUAY_ROBOT_TOKEN": ${{ toJSON(secrets.QUAY_ROBOT_TOKEN) }},
          "NPMJS_TOKEN": ${{ toJSON(secrets.NPMJS_TOKEN) }},
          "AWS_CI_IAM_MONOREPO_SIMPLE_ROLE": ${{ toJSON(secrets.AWS_CI_IAM_MONOREPO_SIMPLE_ROLE) }},
          "AWS_CI_TURBOREPO_S3_BUCKET": ${{ toJSON(secrets.AWS_CI_TURBOREPO_S3_BUCKET) }} }

      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL: ${{ secrets.SLACK_BLOCKS_CI_CHANNEL }}

      GH_ZEN_APP_ID: ${{ secrets.GH_ZEN_APP_ID }}
      GH_ZEN_APP_PRIVATE_KEY: ${{ secrets.GH_ZEN_APP_PRIVATE_KEY }}
